{\rtf1\ansi\deff0{\fonttbl {\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset2 Symbol;}}{\colortbl ;}\pard Contributing Guidelines \sb70\par\pard First off, thank you for considering contributing to this project. It\'27s people like you that make this such a great plugin. \sb70\par\pard Following these guidelines helps to communicate that you respect the time of the developers managing and developing this open source project. In return, they should reciprocate that respect in addressing your issue, assessing changes, and helping you finalize your pull requests. \sb70\par\pard This is an open source project, and we love to receive contributions from our community â€” you\\'2721 There are many ways to contribute, from writing tutorials or blog posts, improving the documentation, submitting bug reports and feature requests or writing code which can be incorporated into the plugin itself. \sb70\par\pard Ground Rules \sb70\par\pard By contributing to this project you submit to following our \sb70\par\pard Code of Conduct \sb70\par . Please read this next section carefully and check if your contribution meets all requirements in this checklist. This will save you and us a lot of time. \pard\sb70\par\pard Issues: Feature Requests & Bug Reports \sb70\par\pard Please make sure you checked all the following before submitting a new issue. \sb70\par{{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\lang22\f0\fs22{\pntext\tab} Before submitting a new issue, search the existing (including closed) issues for any duplicates. \par{\pntext\tab} If you found an existing issue - use the react feature to show you have the same problem or need the same feature. Don\'27t post comments like +1. \par{\pntext\tab} Use the Bug & Feature Issue templates and provide all the required information. \par{\pntext\tab} Be as detailed as possible and include screenshots wherever possible. This will help reproducing your bug or understanding your feature request. \par}\pard Contributing Code \sb70\par\pard Pull requests are the best way to propose changes to the codebase (we use \sb70\par\pard GitHub Flow \sb70\par ). We actively welcome your pull requests: \pard\sb70\par{{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\lang22\f0\fs22{\pntext\tab}\b Commit using the \pard conventional-commit \sb70\par format\\'2721 \b0\par{\pntext\tab} Create issues for any major changes and enhancements that you wish to make. Discuss things transparently and get community feedback. \par{\pntext\tab} Keep feature versions as small as possible, preferably one new feature per version. \par{\pntext\tab} Be welcoming to newcomers and encourage diverse new contributors from all backgrounds. \par}\pard Your First Contribution \sb70\par\pard Unsure where to begin contributing to this project? You can start by looking through these beginner and help-wanted issues: Good first issues - issues which should only require a few lines of code, and a test or two. Help wanted issues - issues which should be a bit more involved than beginner issues. \sb70\par\pard Working on your first Pull Request? You can learn how from this \i free \i0 series, \sb70\par\pard How to Contribute to an Open Source Project on GitHub \sb70\par . \pard\sb70\par\pard At this point, you\'27re ready to make your changes\\'2721 Feel free to ask for help; everyone is a beginner at first :smile_cat: \sb70\par\pard If a maintainer asks you to \\'2722rebase\\'2722 your PR, they\'27re saying that a lot of code has changed, and that you need to update your branch, so it\'27s easier to merge. \sb70\par\pard Getting started \sb70\par{{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec{\pntxta.}}\fi-360\li720\sa200\sl276\slmult1{\pntext\tab} Fork the repo and create your branch from \pard alpha \sb70\par . \par{\pntext\tab} If you\'27ve added code that should be tested, add tests. \par{\pntext\tab} If you\'27ve changed APIs or added new features, update the documentation. \par{\pntext\tab} Ensure the test suite passes. \par{\pntext\tab} Test your changes on a server running the latest supported Minecraft version. \par{\pntext\tab} Issue that pull request\\'2721 \par}\pard Code review process \sb70\par\pard The core team will look at your change as soon as possible and review it. However, since this a project that is done in free time, reviewing might sometimes take some time. \sb70\par\pard Code, commit message and labeling conventions \sb70\par\pard We have very precise rules over how our git commit messages can be formatted. This leads to \b more readable messages \b0 that are easy to follow when looking through the \b project history \b0 . \sb70\par\pard It is important to note that we use the git commit messages to \b generate \b0 the \sb70\par\pard CHANGELOG \sb70\par document. Improperly formatted commit messages may result in your change not appearing in the CHANGELOG of the next release. \pard\sb70\par\pard\pard\sb70\par Commit Message Format \sb70\par\pard Each commit message consists of a \b header \b0 , a \b body \b0 and a \b footer \b0 . The header has a special format that includes a \b type \b0 , a \b scope \b0 and a \b subject \b0 : \sb70\par\pard\sb70\par\pard <type  >(<scope    >):    <subject>      <BLANK LINE>        <body>          <BLANK LINE> <footer></footer></BLANK></body></BLANK></subject></scope></type> \sb70\par\pard\sb70\par\pard\sb70\par\pard Any line of the commit message cannot be longer 100 characters\\'2721 \line This allows the message to be easier to read on GitHub as well as in various Git tools. \sb70\par\pard\sb70\par\pard Type \sb70\par\pard Must be one of the following: \sb70\par{{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\lang22\f0\fs22{\pntext\tab}\b feat \b0 : A new feature \par{\pntext\tab}\b fix \b0 : A bug fix \par{\pntext\tab}\b docs \b0 : Documentation only changes \par{\pntext\tab}\b style \b0 : Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc) \par{\pntext\tab}\b refactor \b0 : A code change that neither fixes a bug nor adds a feature \par{\pntext\tab}\b perf \b0 : A code change that improves performance \par{\pntext\tab}\b test \b0 : Adding missing tests \par{\pntext\tab}\b chore \b0 : Changes to the build process or auxiliary tools and libraries such as documentation generation \par}\pard Scope \sb70\par\pard The scope could be anything that helps to specify the scope (or feature) that is changing. \sb70\par\pard Examples \sb70\par{{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\lang22\f0\fs22{\pntext\tab} command \par{\pntext\tab} event \par{\pntext\tab} permission \par{\pntext\tab} featureX \par}\pard Subject \sb70\par\pard The subject contains a succinct description of the change: \sb70\par{{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\lang22\f0\fs22{\pntext\tab} use the imperative, present tense: \\'2722change\\'2722 not \\'2722changed\\'2722 nor \\'2722changes\\'2722 \par{\pntext\tab} don\'27t capitalize first letter \par{\pntext\tab} no dot (.) at the end \par}\pard Body \sb70\par\pard Just as in the \b subject \b0 , use the imperative, present tense: \\'2722change\\'2722 not \\'2722changed\\'2722 nor \\'2722changes\\'2722 The body should include the motivation for the change and contrast this with previous behavior. \sb70\par\pard Footer \sb70\par\pard The footer should contain any information about \b Breaking Changes \b0 and is also the place to reference GitHub issues that this commit \b Closes \b0 , \b Fixes \b0 , or \b Relates to \b0 . \sb70\par\pard\sb70\par\pard Breaking Changes are intended to be highlighted in the ChangeLog as changes that will require community users to modify their code after updating to a version that contains this commit. \sb70\par\pard\sb70\par\pard Sample Commit messages \sb70\par\pard\sb70\par\pard fix(electron): avoid loading tray icon when show is set to false* for some reason, setting show: false in the window options makes it renderFixes #11231 \sb70\par\pard\sb70\par\pard\sb70\par\pard feat(settings): add new setting to enable dark mode* new setting added to enable dark modeFixes #3857 \sb70\par\pard\sb70\par\pard\sb70\par\pard refactor(respawn): bed respawn event renamed    BREAKING CHANGE: PlayerBedRespawn renamed to PlayerRespawnInBed    Change your code from this:    ```java    @EventHandler    public void onRespawn(PlayerBedRespawn event) \'7b      ...    \'7d    ```    To this:    ```java    @EventHandler    public void onRespawn(PlayerRespawnInBed event) \'7b      ...    \'7d    ``` \sb70\par\pard\sb70\par\pard\line\sb70\par\pard Releasing a new version of Rokon \sb70\par\pard One of the major benefits of this approach is the fact that it will \b automatically release a new version \b0 on every successful push to either \sb70\par\pard master \sb70\par or \pard alpha \sb70\par based on your commit messages. This makes sure your plugin is released following the \pard semantic versioning \sb70\par guidelines. For this to work you have to follow a few simple rules: \pard\sb70\par{{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\lang22\f0\fs22{\pntext\tab} Commit only working and tested code to the master branch. \i Use Pull Requests to work on bigger features or bug fixes and merge them when you are ready. \i0\par{\pntext\tab} Every bugfix, feature and change should have one commit associated with it. \i Do not mix multiple bugs, features, etc. into one huge commit message. Keep your commit size small and commit often. \i0\par{\pntext\tab} Your commit messages must follow the \pard conventional commit rules \sb70\par . \par}}