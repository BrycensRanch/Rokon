{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 \fmodern Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li720 \fi0 {\b Note:} This project is still in development and is not yet ready for use. Please check back later for updates.\par}
{\pard \ql \f0 \sa180 \li720 \fi0 This application was rewritten from Electron to Go for performance and stability reasons.\par}
{\pard \ql \f0 \sa180 \li720 \fi0 Also, none of the features listed below are implemented yet. This is a roadmap for the future.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 This application provides a remote control interface for Roku devices, utilizing the Roku External Control Protocol (ECP) API. It allows users to control their Roku device from their desktop or laptop, providing a more convenient and efficient way to interact with their TV. The app offers a sleek interface with various functions such as navigation, volume control, input selection, typing, and more. It also supports features like Neovim Mode, automatic Roku discovery, DiscordRPC integration, and more. With Rokon, you can control your Roku device remotely with ease and speed, all without the noise of a traditional remote. All powered by Golang and GTK4.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel1 \b \fs32 Features\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Control your Roku device remotely with a sleek interface.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Supports various functions such as navigation, volume control, input selection, typing, and so much more.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\b Speed}, go faster than any Roku remote could dream of, all without the noise.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Purely use your keyboard to control your TV (Neovim Mode)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Automatic Roku Discovery via {\field{\*\fldinst{HYPERLINK "https://www.pcmag.com/encyclopedia/term/ssdp"}}{\fldrslt{\ul
SSDP
}}}
 (You can manually input your Roku IP)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Search your installed Roku apps and channels and quickly launch them. (Roadmap)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab DiscordRPC integration, display what you\u8217're doing on your Roku on Discord!\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\field{\*\fldinst{HYPERLINK "https://activitywatch.net/"}}{\fldrslt{\ul
ActivityWatch
}}}
 integration (Roadmap)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Option to run on startup and optionally turn on your Roku\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Use open source LLM to convert speech to text for voice control (Roadmap)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Use your Xbox or PlayStation controller to control your Roku (Roadmap)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Scripting functionatlity (Roadmap)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab CLI (Roadmap)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Run actions such as auto scanning at a certain time (Roadmap)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Webhook support (Roadmap)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Installing channels (Roadmap)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Launching things like YouTube with a video (Roadmap)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Theming Support on Windows and macOS (Roadmap)\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel1 \b \fs32 Screenshots\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Below is an example screenshot of the application:\par}
{\pard \ql \f0 \sa180 \li0 \fi0 {\cf1 [image: screenshots/desktop.png]\cf0}\par}
{\pard \ql \f0 \sa180 \li0 \fi0 {\i (Screenshot taken on March 11, 2024)}\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel1 \b \fs32 Installation\par}
{\pard \ql \f0 \sa180 \li0 \fi0 To install the app, simply download the appropriate installer for your platform from the {\field{\*\fldinst{HYPERLINK "https://github.com/BrycensRanch/Rokon/releases"}}{\fldrslt{\ul
releases page
}}}
 and follow the installation instructions.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel1 \b \fs32 Usage\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Once installed, launch the application, and you\u8217'll be greeted with a remote control interface. Use the buttons to control your Roku device.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel1 \b \fs32 Roku ECP API Integration\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The application communicates with Roku devices using the Roku External Control Protocol (ECP) API. This allows for seamless control and interaction with Roku devices.\par}
{\pard \ql \f0 \sa180 \li720 \fi0 This application is not affiliated with Roku, Inc. in any way. All product names, logos, and brands are property of their respective owners. All company, product, and service names used in this website are for identification purposes only.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel1 \b \fs32 License\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab My code is licensed under {\field{\*\fldinst{HYPERLINK "./LICENSE.md"}}{\fldrslt{\ul
{\f1 AGPL-3.0-or-later}
}}}
\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab My assets for example Rokon\u8217's logo is licensed under {\field{\*\fldinst{HYPERLINK "./assets/LICENSE.md"}}{\fldrslt{\ul
{\f1 CC-BY-SA-4.0}
}}}
\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Rokon\u8217's documentation is licensed under {\field{\*\fldinst{HYPERLINK "https://raw.githubusercontent.com/IQAndreas/markdown-licenses/master/gnu-fdl-v1.3.md"}}{\fldrslt{\ul
{\f1 GFDL-1.3}
}}}
\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Rokon is free software as defined by the {\field{\*\fldinst{HYPERLINK "https://fsf.org"}}{\fldrslt{\ul
FSF
}}}
. It collects telemetry data by default, see {\field{\*\fldinst{HYPERLINK "./PRIVACY.md"}}{\fldrslt{\ul
PRIVACY.md
}}}
\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel1 \b \fs32 Undocumented API Calls\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Additionally, the app leverages some undocumented API calls to gain an edge over the competition, providing enhanced functionality and a better user experience.\par}
}
