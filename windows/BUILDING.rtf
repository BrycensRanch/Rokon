{\rtf1\ansi\deff0{\fonttbl {\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset2 Symbol;}}{\colortbl ;}\pard Contributing to Rokon \sb70\par\pard Thank you for your interest in contributing to Rokon\\'2721 We appreciate your help in making our Roku remote app even better. \sb70\par\pard Prerequisites \sb70\par\pard Before you start contributing, please make sure you have the following: \sb70\par{{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\lang22\f0\fs22{\pntext\tab}\pard Go \sb70\par installed \par{\pntext\tab}\pard GTK4 \sb70\par installed (don\'27t forget gobject-introspection-1.0) \par{\pntext\tab}\pard Git \sb70\par installed and configured with your GitHub account and your commits signed \par{\pntext\tab}\pard Roku device \sb70\par (for local testing, not required for building) \par{\pntext\tab} Builiding the application for Windows requires \pard MSYS2 \sb70\par with the dependencies for GTK4, Golang, and Rust (with cargo) installed. \par{\pntext\tab} Building the application for Windows from Linux/MacOS requires \pard cross-compiling \sb70\par which is not supported by the project. That\'27s not to say it\'27s impossible, but it\'27s not recommended. There\'27s libraries missing from Fedora\'27s repositories that are required for cross-compiling GTK4 Golang applications. It\'27s best to let the CI/CD pipeline handle the Windows builds. Commit and push your changes to the repository and let the CI/CD pipeline handle the rest. \par{\pntext\tab} Patience and a willingness to learn \par}\pard Development Setup \sb70\par\pard\sb70\par\pard Installing the dependencies depends on your operating system. Here, we have the most common operating systems and their package managers. \sb70\par\pard Keep in mind that building the project took 12 minutes on my blazingly fast i7-11800H processor with 16GB of RAM. It will take longer on slower hardware. Good luck\\'2721 \sb70\par\pard\sb70\par\pard ü™ü Windows \sb70\par\pard Traditional processors (AMD64 or x64 architecture) \sb70\par\pard This application was developed on Linux. While it was built on Linux, you can use it on Windows. However, building the application on Windows is not recommended. If you want to build the application on Windows, you will need to install MSYS2 and the dependencies for GTK4, Golang \sb70\par\pard This can be accomplished with: \sb70\par\pard\sb70\par\pard winget install --id=MSYS2.MSYS2 -e \sb70\par\pard\sb70\par\pard Then, open the MSYS2 CLANG64 terminal and run the following commands: \sb70\par\pard\sb70\par\pard pacman -Syupacman -S --noconfirm git mingw-w64-clang-x86_64-go mingw-w64-clang-x86_64-gtk4 mingw-w64-clang-x86_64-gobject-introspection \sb70\par\pard\sb70\par\pard Windows on ARM (like Snapdragon X Elite) (aarch64 or ARM64) \sb70\par\pard Windows 11 is \b required \b0 for Windows on ARM. \sb70\par\pard\sb70\par\pard winget install --id=MSYS2.MSYS2 -e \sb70\par\pard\sb70\par\pard Then, open the MSYS2 CLANGARM64 terminal and run the following commands: \sb70\par\pard\sb70\par\pard pacman -Syupacman -S --noconfirm git mingw-w64-clang-aarch64-go mingw-w64-clang-aarch64-gtk4 mingw-w64-clang-aarch64-gobject-introspection \sb70\par\pard\sb70\par\pard üçé macOS \sb70\par\pard\sb70\par\pard macOS: \sb70\par\pard brew install git go gtk4 gobject-introspection \sb70\par\pard\sb70\par\pard\sb70\par\pard Note: You will need to install \sb70\par\pard Homebrew \sb70\par to install the dependencies on macOS. \pard\sb70\par\pard After that, follow the Linux build instructions, as they are the same for macOS (UNIX-like). \sb70\par\pard üêß Linux \sb70\par\pard\sb70\par\pard You cannot build the application on Debian Stable, Ubuntu 22.04, PopOS, Linux Mint  or older distributions due to packages being too old in the software repositories. This applies to RHEL, OpenSUSE Leap, Mageia,and CentOS as well. You will need to use a newer distribution like Fedora, Ubuntu 24.04, Linux Mint 22, or OpenSUSE Tumbleweed/Slowroll. \sb70\par\pard If you don\'27t wnat to use a newer distribution, you can use a containerized build and runtime environment. This gets around your ancient software repositories. For this, you\'27ll need \sb70\par\pard Distrobox \sb70\par (container) and choose the Fedora 40 image and then follow the instructions for Fedora. \pard\sb70\par\pard If you don\'27t want to use Distrobox, you can always use our prebuilt AppImage which works on old and new distributions. Or our Snap package or Flatpak package. \sb70\par\pard Fedora Linux 40+: \sb70\par\pard sudo dnf in -y git golang gtk4-devel @development-tools \sb70\par\pard\sb70\par\pard Ubuntu 24.04+: \sb70\par\pard\sb70\par\pard\sb70\par\pard sudo apt install -y build-essential git libgtk-4-dev libgirepository1.0-dev software-properties-common# If using Rhino Linux, do not add the PPA. Rather just install the go-bin package with pacstall. This PPA is added for newer versions of Go for Ubuntu Stable releases.sudo add-apt-repository ppa:longsleep/golang-backportssudo apt updatesudo apt install -y golang-go \sb70\par\pard\sb70\par\pard\sb70\par\pard Alpine Linux: \sb70\par\pard\sb70\par\pard\sb70\par\pard sudo setup-apkrepos -c -1sudo apk add --no-cache alpine-sdk gtk4.0-dev gobject-introspection-dev go \sb70\par\pard\sb70\par\pard\sb70\par\pard Arch Linux: \sb70\par\pard sudo pacman -S --noconfirm git base-devel go gtk4 gobject-introspection \sb70\par\pard\sb70\par\pard OpenSUSE Tumbleweed/Slowroll: \sb70\par\pard sudo zypper in -y git go gtk4-devel gobject-introspection-devel \sb70\par\pard\sb70\par\pard\sb70\par\pard Cloning and building the project \sb70\par\pard\sb70\par\pard git clone https://github.com/BrycensRanch/Rokoncd Rokon# If your internet is slow, this WILL take awhile.go mod download all# This may take a while, CGO is slow.go build -v -o rokon .# If on Windows, do not add \\'2722sudo\\'2722# If on macOS, do not add \\'2722sudo\\'2722# On Windows & macOS it does not natively integrate with your operating system. # All it does is add rokon to your path sudo make install \sb70\par\pard\sb70\par{{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec{\pntxta.}}\fi-360\li720\sa200\sl276\slmult1{\pntext\tab} Run the app in development mode: \par}\pard\sb70\par\pard wgo go run -v . \sb70\par\pard\sb70\par\pard Note: To truly test the development version of the app, you will need a Roku device. \sb70\par}