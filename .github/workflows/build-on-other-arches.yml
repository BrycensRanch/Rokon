name: Build On Other Arches

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}

on:
  workflow_dispatch:

jobs:
  build_aarch64:
    timeout-minutes: 560
    runs-on: ubuntu-24.04
    steps:
      - name: Check out current repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if /var/run/docker.sock is mounted
        run: |
          ls -la /var/run/docker.sock

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Build aarch64 on fedora_latest
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: aarch64
          distro: fedora_latest
          setup: |
            mkdir -p "${PWD}/artifacts"
          shell: /bin/sh
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          install: |
            dnf install -y @development-tools git gtk4-devel gobject-introspection-devel go @development-libs @rpm-development-tools
          run: |
            make fatimage
            make tarball
            spectool -g -R ./rokon.spec
            dnf builddep -y ./rokon.spec
            rpmbuild -ba ./rokon.spec
      - name: 🗃️ Upload Built Tarball 📦
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: rokon-${{runner.os}}-tarball-aarch64
          include-hidden-files: true
          if-no-files-found: error
          path: |
            *.tar.gz
            *tar*.zsync
      - name: 🗃️ Upload Built AppImage 📦
        uses: actions/upload-artifact@v4
        if: always()
        
        with:
          name: rokon-AppImage-aarch64
          if-no-files-found: error
          path: |
            *.AppImage
            *.AppImage.zsync
  build_armv6:
    timeout-minutes: 560
    runs-on: ubuntu-24.04
    steps:
      - name: Check out current repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if /var/run/docker.sock is mounted
        run: |
          ls -la /var/run/docker.sock

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Build armv6 on alpine_latest
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: armv6
          distro: alpine_latest
          setup: |
            mkdir -p "${PWD}/artifacts"
          shell: /bin/sh
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          install: |
            apk add apk-tools
            setup-apkrepos -c -1
            apk add --no-cache alpine-sdk gtk4.0-dev gobject-introspection-dev go git desktop-file-utils fakeroot patchelf python3 py3-pip py3-setuptools strace squashfs-tools util-linux zsync appstream
          run: |
            make fatimage
            make tarball
            abuild deps
            abuild
      - name: 🗃️ Upload Built Tarball 📦
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: rokon-${{runner.os}}-tarball-armv6
          include-hidden-files: true
          if-no-files-found: error
          path: |
            *.tar.gz
            *tar*.zsync
      - name: 🗃️ Upload Built AppImage 📦
        uses: actions/upload-artifact@v4
        if: always()
        
        with:
          name: rokon-AppImage-armv6
          if-no-files-found: error
          path: |
            *.AppImage
            *.AppImage.zsync
  build_armv7:
    timeout-minutes: 560
    runs-on: ubuntu-24.04
    steps:
      - name: Check out current repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if /var/run/docker.sock is mounted
        run: |
          ls -la /var/run/docker.sock

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Build armv7 on ubuntu_latest
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: armv7
          distro: ubuntu_latest
          setup: |
            mkdir -p "${PWD}/artifacts"
          shell: /bin/sh
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          install: |
            apt update
            apt install -y build-essential git libgtk-4-dev libgirepository1.0-dev software-properties-common
            add-apt-repository -y ppa:longsleep/golang-backports
            apt update
            apt install -y golang-go
          run: |
            make fatimage
            make tarball
      - name: 🗃️ Upload Built Tarball 📦
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: rokon-${{runner.os}}-tarball-armv7
          include-hidden-files: true
          if-no-files-found: error
          path: |
            *.tar.gz
            *tar*.zsync
      - name: 🗃️ Upload Built AppImage 📦
        uses: actions/upload-artifact@v4
        if: always()
        
        with:
          name: rokon-AppImage-armv7
          if-no-files-found: error
          path: |
            *.AppImage
            *.AppImage.zsync